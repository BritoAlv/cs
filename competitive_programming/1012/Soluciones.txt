A Div 1: Observar este patron:

p1, p1+1, pi -1, pi+2, pi-2 ...

Si se llega hasta pi-k, eso da un lugar de 2k+1 numeros primos, es necesario que pi cumpla que:

pi - k >= 1
pi + k <= n

pi >= 1 + k
pi <= n - k

2k+1 >= n/3 - 1
 k >= (n/3)/2 - 1
 
En particular entre n/3 y 2n/3 funciona, que halla un primo en este intervalo es cierto porque siempre hay un primo entre x, 2x. 

La cosa es hacer una solucion sin depender de ese fact.

C Div 2: Crear un set con las tablas y casillas vacias, haciendo un bfs a partir de {1,1}, cuando se acabe un caso de prueba restablecer todo al estado inicial (todo libre)

La complejidad es O(N * log N) 
